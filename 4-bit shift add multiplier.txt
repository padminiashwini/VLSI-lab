#Design block


timescale 1ns/1ps
module shift_add (clk, rst, a,b,c);
parameter m=4,n=4; 
integer i;
input clk,rst;
input [m-1:0] a;
input [n-1:0] b;
output reg [m+n-1:0] c;
reg [m+n-1:0]a1;
reg [n-1:0]b1;
always @( posedge clk or posedge rst)
begin 
if(rst) 
begin
c=0;
end
else
begin c=0;
a1[m-1:0]=a;
a1[m+n-1:m]=0;
b1=b;
for (i=0;i<n;i=i+1) 
begin
if (b1[i]==1'b0)
begin
c=c+0;
end
else if (b1[i]==1'b1)
begin
c=c+(a1<<i);
end
end
end
end
endmodule


#Testbench 


timescale 1ns/1ps
module shift_tb; 
parameter m=4,n=4; 
reg [m-1:0] a;
reg [n-1:0] b; reg clk,rst; 
wire [m+n-1:0]c; 
initial
begin
clk=1'b0;
rst=1'b1;
end
shift_add uut(clk, rst, a, b, c); 
always #5 clk=~clk;
initial
begin
rst=1;
#2 rst=0;
a=4'b1111; 
b=4'b1111;

#20 rst=1;
#2 rst=0;
a=4'b1011; 
b=4'b1010;

#20 rst=1;
#2 rst=0; 
a=4'b1001;
b=4'b1000;
#100 $finish;
end
endmodule

